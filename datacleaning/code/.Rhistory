# remove all objects
rm(list=ls())
# Unload all packages
library(pacman)
pacman::p_unload(all)
# Add packages
pacman::p_load(
tidyverse, #dplyr, readr, etc.
data.table, #fread()
foreign, #load data types including stata .dta files
magrittr, #%<>% operator
skimr #for summerising
)
getwd()
root_url <- "https://raw.githubusercontent.com/tbtimes/florida-police-shooting-data/master/"
# Read csv of florida police shootings "cases.csv"
cases <- read_csv(paste0(root_url, "cases.csv"))
# Read csv of florida police shootings "cities.csv"
cities <- read_csv(paste0(root_url, "cities.csv"))
# Read csv of florida police shootings "peopleshot.csv"
people <- read_csv(paste0(root_url, "peopleshot.csv"))
save(cases, cities, people,
file="../data/raw/fl_shooting_data_raw.RData")
cases %>% glimpse()
cities %>% glimpse()
people %>% glimpse()
# Clarify case id
cases %<>% rename(case_id = id)
# Clarify city id and city name vars
cities %<>%
rename(city_id = id) %>%
rename(city_name = name)
# Start with people as the base dataset and add
fl_shootings <- people
# Add columns with data from cases, matching on 'case_id' variable
fl_shootings <- left_join(x = fl_shootings,
y = cases,
by = "case_id")
# Add column with city names from cities, matching on 'city_id' variable
fl_shootings <- left_join(x = fl_shootings,
y = cities,
by = "city_id")
save(fl_shootings, file="../data/fl_shooting_data.RData")
# remove all objects
rm(list=ls())
# Unload all packages
library(pacman)
pacman::p_unload(all)
# Add packages
pacman::p_load(
tidyverse, #dplyr, readr, etc.
data.table, #fread()
foreign, #load data types including stata .dta files
magrittr, #%<>% operator
skimr, #for summerising
lubridate #dates
)
load("../data/fl_shooting_data.RData")
fl_shootings %>% skimr::skim()
# Trim whitespace from ends of all character variables
fl_shootings %<>%
mutate_if(is.character, list(str_trim))
# Check for empty cells
fl_shootings %>%
# Keep only character variables
select_if(is.character) %>%
# Recode character variables as 1 if cell is empty
mutate_all(list(~ifelse(.=="",1,0))) %>%
# Add up empty cells for each character variable
summarise_all(sum, na.rm=T) %>%
# Transpose data for visibility
t()
# Trim whitespace from ends of all character variables
fl_shootings %<>%
mutate_if(is.character, list(str_trim))
# Check for empty cells
fl_shootings %>%
# Keep only character variables
select_if(is.character) %>%
# Recode character variables as 1 if cell is empty
mutate_all(list(~ifelse(.=="",1,0))) %>%
# Add up empty cells for each character variable
summarise_all(sum, na.rm=T) %>%
# Transpose data for visibility
t()
# remove all objects
rm(list=ls())
# Unload all packages
library(pacman)
pacman::p_unload(all)
# Add packages
pacman::p_load(
tidyverse, #dplyr, readr, etc.
data.table, #fread()
foreign, #load data types including stata .dta files
magrittr, #%<>% operator
skimr #for summerising
)
getwd()
root_url <- "https://raw.githubusercontent.com/tbtimes/florida-police-shooting-data/master/"
# Read csv of florida police shootings "cases.csv"
cases <- read_csv(paste0(root_url, "cases.csv"))
# Read csv of florida police shootings "cities.csv"
cities <- read_csv(paste0(root_url, "cities.csv"))
# Read csv of florida police shootings "peopleshot.csv"
people <- read_csv(paste0(root_url, "peopleshot.csv"))
# remove all objects
rm(list=ls())
# Unload all packages
library(pacman)
pacman::p_unload(all)
# Add packages
pacman::p_load(
tidyverse, #dplyr, readr, etc.
data.table, #fread()
foreign, #load data types including stata .dta files
magrittr, #%<>% operator
skimr #for summerising
)
getwd()
data_path <- "./data/"
# Read csv of "legislators.csv"
legislators <- read_csv(paste0(data_path, "legislators.csv"))
data_path <- "../data/"
# Read csv of "legislators.csv"
legislators <- read_csv(paste0(data_path, "legislators.csv"))
# Read csv of  "committee.csv"
committee <- read_csv(paste0(data_path, "committee.csv"))
# Read csv of "committee_members.csv"
committee_members <- read_csv(paste0(root_url, "committee_members.csv"))
data_path <- "../data/"
# Read csv of "legislators.csv"
legislators <- read_csv(paste0(data_path, "legislators.csv"))
# Read csv of  "committee.csv"
committee <- read_csv(paste0(data_path, "committee.csv"))
# Read csv of "committee_members.csv"
committee_members <- read_csv(paste0(data_path, "committee_members.csv"))
data_path <- "../data/"
# Read csv of "legislators.csv"
legislators <- read_csv(paste0(data_path, "legislators.csv"))
# Read csv of  "committee.csv"
committee <- read_csv(paste0(data_path, "committee.csv"))
# Read csv of "committee_members.csv"
committee_members <- read_csv(paste0(data_path, "committee_members.csv"))
save(legislators, committee, committee_members
file="../data/raw/total.RData")
save(legislators, committee, committee_members,
file="../data/raw/total.RData")
save(legislators, committee, committee_members,
file="../data/total.RData")
save(legislators, committee, committee_members,
file="../data/total.RData")
legislators %>% glimpse()
committee %>% glimpse()
committee_members %>% glimpse()
committee %>% glimpse()
committee_members %>% glimpse()
legislators %>% glimpse()
# Clarify case id
committee %<>% rename(id = thomas_id)
committee_members %<>% rename(id = comm_id)
# Start with people as the base dataset and add
merged <- committee
# Add columns with data from cases, matching on 'case_id' variable
merged <- left_join(x = merged,
y = committee_members,
by = "id")
# Add columns with data from cases, matching on 'case_id' variable
merged <- left_join(x = merged,
y = legislators,
by = "leg_id")
# Clarify case id
legislators %<>% rename(leg_id = id)
# Add columns with data from cases, matching on 'case_id' variable
merged <- left_join(x = merged,
y = legislators,
by = "leg_id")
save(merged, file="../data/merged.RData")
merged %>% glimpse()
# remove dummy column
merged = subset(merged, select=-c(X1.x, X1.y))
merged %>% glimpse()
# remove dummy column
merged = subset(merged, select=-c(X1))
merged %>% glimpse()
save(merged, file="../data/merged.RData")
merged %>% skimr::skim()
# Trim whitespace from ends of all character variables
merged %<>%
mutate_if(is.character, list(str_trim))
# Check for empty cells
merged %>%
# Keep only character variables
select_if(is.character) %>%
# Recode character variables as 1 if cell is empty
mutate_all(list(~ifelse(.=="",1,0))) %>%
# Add up empty cells for each character variable
summarise_all(sum, na.rm=T) %>%
# Transpose data for visibility
t()
colnames(merged)[colnames(merged) == 'name'] <- 'committee-name'
merged %>% glimpse()
colnames(merged)[colnames(merged) == 'name'] <- committee_name
colnames(merged)[colnames(merged) == 'name'] <- 'committee_name'
merged %>% glimpse()
colnames(merged)[colnames(merged) == 'name'] <- 'committee_name'
colnames(merged)[colnames(merged) == 'type'] <- 'committee_type'
merged %>% glimpse()
colnames(merged)[colnames(merged) == 'name'] <- 'committee_name'
colnames(merged)[colnames(merged) == 'type'] <- 'committee_type'
colnames(merged)[colnames(merged) == 'id'] <- 'committee_id'
colnames(merged)[colnames(merged) == 'leg_id'] <- 'legislator_id'
merged %>% glimpse()
colnames(merged)[colnames(merged) == 'committee-name'] <- 'committee_name'
colnames(merged)[colnames(merged) == 'type'] <- 'committee_type'
colnames(merged)[colnames(merged) == 'id'] <- 'committee_id'
colnames(merged)[colnames(merged) == 'leg_id'] <- 'legislator_id'
merged %>% glimpse()
colnames(merged)[colnames(merged) == 'name'] <- 'committee_name'
colnames(merged)[colnames(merged) == 'type'] <- 'committee_type'
colnames(merged)[colnames(merged) == 'id'] <- 'committee_id'
colnames(merged)[colnames(merged) == 'leg_id'] <- 'legislator_id'
merged %>% glimpse()
merged %<>%
# Turn race into factor var
mutate(committee_type = as.factor(committee_type)) %>%
# Create binary variable for suicide
mutate(is_house = ifelse(committee_type == "house", T, F))
merged %<>%
# Add year variable
mutate(birth_year = year(birthday)) %>%
# Add year variable
mutate(birth_month = month(birthday)) %>%
# Add year variable
mutate(birth_month = mday(birthday))
merged %>% glimpse()
merged %<>%
# Add year variable
mutate(age = 2019 - birth_year)
merged %>% glimpse()
merged$legislator_age <- 2019 - birth_year
merged$legislator_age <- 2019 - merged$birth_year
merged %>% glimpse()
merged %>% glimpse()
merged %>%
summarise_if(is.numeric, mean, na.rm=T)
merged %>%
group_by(committee_type) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_type, committee_name) %>%
summarise(n=n())
merged %>% glimpse()
merged %>%
summarise_if(is.numeric, mean, na.rm=T)
merged %>%
group_by(committee_type) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_name) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_type, committee_name) %>%
summarise(n=n())
merged %>%
group_by(is_house) %>%
summarise(n=n())
merged %>% glimpse()
merged %>%
summarise_if(is.numeric, mean, na.rm=T)
merged %>%
group_by(committee_type) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_name) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_type, committee_name) %>%
summarise(n=n())
merged %>%
group_by(is_house) %>%
summarise(n=n())
# use base r for summarize
summary(merged)
merged %>% glimpse()
merged %>%
summarise_if(is.numeric, mean, na.rm=T)
merged %>%
group_by(committee_type) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_name) %>%
summarise(avg=mean(age, na.rm=T),
sd=sd(age, na.rm=T))
merged %>%
group_by(committee_type, committee_name) %>%
summarise(n=n())
merged %>%
group_by(is_house) %>%
summarise(n=n())
# use base r for summarize
summary(merged)
# use base r for summarize
summary(merged$committee_name)
# use base r for summarize
describe(merged$committee_name)
# use base r for summarize
summary(merged$legislator_age)
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(committee_name) %>%
summarise(total=n()) %>%
print()
# Spread out totals by year
grouped_by_name %>%
spread(key=committee_name, value=total)
# Restack data
grouped_by_name %>%
spread(key=committee_name, value=total) %>%
gather(key=committee_name, value=total, - mergedtemp)
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(committee_name) %>%
summarise(total=n()) %>%
print()
# Spread out totals by year
grouped_by_name %>%
spread(key=committee_name, value=total)
# Restack data
grouped_by_name %>%
spread(key=committee_name, value=total) %>%
gather(key=committee_name, value=total, - merged)
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(committee_name) %>%
summarise(total=n()) %>%
print()
# Spread out totals by year
grouped_by_name %>%
spread(key=committee_name, value=total)
# Restack data
grouped_by_name %>%
spread(key=committee_name, value=total) %>%
gather(key=committee_name, value=total, -committee_name)
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(commmittee_type, committee_name) %>%
summarise(total=n()) %>%
print()
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(committee_type, committee_name) %>%
summarise(total=n()) %>%
print()
# Spread out totals by year
grouped_by_name %>%
spread(key=committee_name, value=total)
# Restack data
grouped_by_name %>%
spread(key=committee_name, value=total) %>%
gather(key=committee_name, value=total, -committee_type)
# Frequency of weapons
grouped_by_name<- merged %>%
group_by(committee_type, committee_name) %>%
summarise(total=n())
head(grouped_by_name)
# Spread out totals by year
grouped_by_name %>%
spread(key=committee_name, value=total)
head(grouped_by_name)
# Restack data
grouped_by_name %>%
spread(key=committee_name, value=total) %>%
gather(key=committee_name, value=total, -committee_type)
head(grouped_by_name)
save(merged, file="../data/final.RData")
rmarkdown::render()
save(merged, file="../data/final.RData")
